[
    {
        "name": "Coders at work",
        "children": [
            {
                "name": "Brad Fitzpatrick",
                "children": [
                    {
                        "name": "Maintainer for life",
                        "text": "<i>I've also done a lot of testing since LiveJournal.\nOnce I started working with other people\nespecially. And once I realized that code I write\nnever fucking goes away and I'm going to be a\nmaintainer for life.</i> I get comments about blog\nposts that are almost 10 years old. \u201cHey. I found\nthis code. I found a bug,\u201d and I'm suddenly\nmaintaining code.",
                        "page": "01",
                        "id": 1
                    },
                    {
                        "name": "Tests to guard",
                        "text": "<i>I had to force a lot of people to write tests, \nmostly people who were working for me. \nI would write tests to guard against my own code breaking, \nand then once they wrote code. I was like, \u201cAre you even sure that\nworks? Write a test. Prove it to me.\u201d</i> At a certain\npoint, people realize, \u201cHoly crap, it does pay off,\u201d\nespecially maintenance costs later.",
                        "page": "02",
                        "id": 2
                    },
                    {
                        "name": "About memcached",
                        "text": "<i>I remember coming up with the idea. \nI was in my shower one day. The site\nwas melting down and I was showering and then\nI realized we had all this free memory all over the\nplace.</i> I whipped up a prototype that night, wrote\nthe server in Perl and the client in Perl.",
                        "page": "03",
                        "id": 3
                    },
                    {
                        "name": "Win a race",
                        "text": "It\u2019s about being awesome. It\u2019s about winning. \n<i>You don\u2019t win a race by trying not to lose. \nAnd you don\u2019t win at life by trying not to suck</i>. \nFortunately, the content of\nthe book has never been about trying not to suck. \nI can\u2019t think that way, and neither should you.",
                        "page": "04",
                        "id": 4
                    },
                    {
                        "name": "Write something complex",
                        "text": "Oh, yeah. I definitely try to find an\nexcuse to use anything, to learn it. <i>Because you\nnever learn something until you have to write\nsomething in it, until you have to live and breathe\nit.</i> It's one thing to go learn a language for fun, but\nuntil you write some big, complex system in it, you\ndon't really learn it.",
                        "page": "04",
                        "id": 5
                    },
                    {
                        "name": "Formal education",
                        "text": "I knew programming pretty well but I didn't have \nthe vocabulary to describe what it was I was doing. \n<i>Or I would make up my own terminology for it \nand people would think I didn't know what I was talking about.\nFormal C.S. education helped me be able to talk about it.</i>",
                        "page": "05",
                        "id": 6
                    },
                    {
                        "name": "Hard parts first",
                        "text": "Sometimes. But I've started with the\nhard bits or the parts I was unsure of, and tried\nto implement those parts first. <i>I try not to put\noff anything hard or surprising to the end; I enjoy\ndoing the hard things first.</i> The projects that I\nnever finish\u2014my friends give me shit that it's a\nwhole bunch\u2014it's because I did the hard part.",
                        "page": "06",
                        "id": 7
                    },
                    {
                        "name": "Reading code",
                        "text": "Then I really enjoyed reading code, because\nwhenever I didn't understand some pattern. I was\nlike, <i>\u201cWait, why the fuck did they do it like this?\u201d\nand I would look around more, and I'd be like,\n\u201cWow, that is a really clever way to do this. I see\nhow that pays off.\u201d</i> I would've done that earlier but\nI was afraid to do it because I was thinking that if it\n\u2018wasn't my code. I wouldn't understand it.",
                        "page": "07",
                        "id": 8
                    },
                    {
                        "name": "Strict style guide",
                        "text": "Having worked at Google with really strict style\nguidelines in all languages. <i>On our top six or seven\nlanguages, there's a really strict style guide that\nsays</i>, \u201cThis is how we lay out our code. This is how\nwe name variables. This is how we do spacing and\nindentation, and these patterns and conventions\nyou use, and this is how you declare a static field.\u201d",
                        "page": "08",
                        "id": 9
                    },
                    {
                        "name": "Fear driven advice",
                        "text": "Your parents would rather you be OK than have a\nremarkable career at the cost of great personal risk.\n<i>More than any other third party you might look\nto, your parents are going to give you fear-driven\nadvice. Fear-driven advice is geared toward not\nlosing.</i> Thinking about not losing is not the way to\nwin! Winners take risks.",
                        "page": "09",
                        "id": 10
                    },
                    {
                        "name": "Google deadlines",
                        "text": "\u201cYay! A deadline!\u201d and I get so excited that\nthe adrenaline kicks in, and I work, and I finish\nthe damn thing. <i>Nothing with Google is really a\ndeadline. With Google it's like, \u201cWhat do you think\nabout launching this? How does that feel?\u201d</i> It's rare\nthat there's some real deadline.",
                        "page": "10",
                        "id": 11
                    },
                    {
                        "name": "People complacency",
                        "text": "<i>That was a learning\nexperience in HR, that some people just do what\nthey're told and don't really have a passion\nfor excellence</i>. They're just like, \u201cDone. Next\nassignment,\u201d Or they don't tell you and just browse\nthe Web. So I had a couple of painful experiences.\nBut I think, after a year or two of that, I learned that\npeople are different.",
                        "page": "11",
                        "id": 12
                    },
                    {
                        "name": "Purist programmers",
                        "text": "Some are purists. They would just do abstraction\non abstraction on abstractions. They would go\nreally slowly and are very religious about their\nstyle. <i>They're like, \u201cI'm an artisan programmer.\u201d\nAnd I was like, \u201cYour code doesn't run. It's not\nefficient and it doesn't look like any of the other\ncode that you're interacting with.\u201d</i>",
                        "page": "12",
                        "id": 13
                    },
                    {
                        "name": "People motivations",
                        "text": "Other people I eventually figured out what\nmotivated them. One guy was really good at\ntinkering and getting a prototype working. He\nwrote sysadmin Perl. <i>He could wire stuff together,\nwrite shell scripts, and write really bad Perl and\nreally bad C, but kind of get it working.</i> Then we\nwould be like, \u201cHoly crap, you researched all this\nstuff, you got all these components talking to each\nother?\u201d",
                        "page": "13",
                        "id": 14
                    },
                    {
                        "name": "Side projects",
                        "text": "I often look for people that have done,\nlike, a lot of stuff on their own that wasn't asked\nof them. <i>Not just their school project or just what\ntheir previous employer had them do. Somebody\nwho was passionate about something and had\nsome side project.</i> How did they maintain it and\nhow serious did they get with it? Or do they do a lot\nof quick hacks and abandon them?",
                        "page": "14",
                        "id": 15
                    },
                    {
                        "name": "Real understanding",
                        "text": "<i>\u201cYeah, yeah, sure. I understand.\u201d You delude\nyourself but once you actually have to get down\nand do it at a real level and understand all the\ncorner cases, it forces you to actually learn the\nthing.</i> But I don't know if that would work for\neveryone.",
                        "page": "15",
                        "id": 16
                    },
                    {
                        "name": "Smaller parts",
                        "text": "But a lot of times lately, if there's something weird\ngoing on. I'm like, <i>\u201cOK, that function is too big;\nlet's break that up into smaller parts and unit-test\neach one of them separately to figure out where my\nassumptions are wrong</i>, rather than just sticking\nin random printIns.\u201d",
                        "page": "16",
                        "id": 17
                    },
                    {
                        "name": "About optimization",
                        "text": "<i>Optimization is fun because it's not\nnecessary. If you're doing that, you've got your\nthing working and nothing else is more important</i>\nand you're either saving money or doing it\nbecause it's like a Perl golf contest ...",
                        "page": "17",
                        "id": 18
                    },
                    {
                        "name": "Logic and statistics",
                        "text": "<i>You don't need that much math. For most programmers, \nday to day, statistics is a lot more important.</i> \nIf you're doing graphics stuff,\nmath is a lot more important but most people\ndoing Java enterprise stuff or web stuff, it's not.\nLogic helps and statistics comes up a lot.",
                        "page": "18",
                        "id": 19
                    },
                    {
                        "name": "Social kid",
                        "text": "<i>There was some study\nabout who was successful after high school. Was it\nthe smart kids or the social kids?</i> It turned out that\nit was the social kids who ended up making all the\nmoney in life, not the people with the good grades.\nI thought that was interesting.",
                        "page": "19",
                        "id": 20
                    },
                    {
                        "name": "Bridge engineer",
                        "text": "I have a friend who's a structural engineer\nand he went to school forever and took all\nthis engineering certification stuff. <i>It's kind of\ncomforting to know that the people who build the\nbridges I'm on studied this shit forever and took\ntons of tests and stayed up all the time studying.</i>",
                        "page": "20",
                        "id": 21
                    },
                    {
                        "name": "Competing",
                        "text": "<i>I don't feel like I'm competing with anyone right now\nand I don't really care if other people are better\nbecause I feel like there are tons of people who are\nbetter already.</i> I figure we are always in the middle\nanyway, so I'm happy to stay in the middle.",
                        "page": "21",
                        "id": 22
                    }
                ]
            },
            {
                "name": "Douglas Crockford",
                "children": [
                    {
                        "name": "Language changes",
                        "text": "<i>When you're really successful, you need to be extremely\ncautious in any changes that you make.</i> Whereas\nif you haven't made it yet, you have a lot more\nfreedom in changing it around.",
                        "page": "01",
                        "id": 23
                    },
                    {
                        "name": "Ajax accident",
                        "text": "The language got frozen in 1999 and then should have gone\ninto neglect and died. <i>But instead, by accident,\nAjax happened and suddenly it's the world's most\nimportant programming language.</i>",
                        "page": "02",
                        "id": 24
                    },
                    {
                        "name": "Js worst feature",
                        "text": "<i>The worst feature of JavaScript, without question,\nis its dependence on a global object.</i> It doesn't have\nlinkers, it doesn't have any kind of information\nhiding between compilation units. It all gets\ndumped together into a common global object.",
                        "page": "03",
                        "id": 25
                    },
                    {
                        "name": "GWT js ignorant",
                        "text": "<i>Because I worry about the abstraction leakage. If\nthere's a problem in your Java code or in GWT or\nin what it produces on the other side, you may or\nmay not have a place to stand to deal with that.</i>\nParticularly if you took the approach that you can\nafford to be completely ignorant about JavaScript\nbecause the language is hidden from you.",
                        "page": "10",
                        "id": 26
                    },
                    {
                        "name": "Js smaller",
                        "text": "<i>I think the best way to make JavaScript\nbetter would be to make it smaller.</i>\nIf we could just get it down to what it does really well and\nremove the features that add little or no value,\nit's actually a better language. And I think we can.",
                        "page": "11",
                        "id": 27
                    },
                    {
                        "name": "Ajax libraries",
                        "text": "Where we do have a problem is that <i>there are too\nmany Ajax libraries. That was a consequence of the\nfact that JavaScript is so powerful and the need\nis so profound and that they're easy to make.</i> So\nfor a while everybody was making them.",
                        "page": "12",
                        "id": 28
                    },
                    {
                        "name": "Jquery selector",
                        "text": "One thing that we're seeing now is that the Ajax\nlibraries are converging. <i>jQuery came up with\na notation for using CSS selectors for getting a\nlist of objects from the DOM and then providing\nmethods for manipulating the objects en masse.</i>\nAnd that turns out to be a really good idea and\nit's something that JavaScript does very effectively.",
                        "page": "13",
                        "id": 29
                    },
                    {
                        "name": "Code reading",
                        "text": "One of the things I've been pushing is\ncode reading. <i>I think that is the most useful thing\nthat a community of programmers can do for\neach other\u2014spend time on a regular basis reading\neach other's code.</i>",
                        "page": "14",
                        "id": 30
                    },
                    {
                        "name": "Almost done",
                        "text": "I've managed projects where we're up against a\ndeadline and we had people saying, <i>\u201cYeah. I'm\nalmost done,\u201d and then you get the code, and\nthere's nothing there, or it's crap, or whatever, and\nthey're nowhere close to done.</i> In management,\nthose are the experiences you hate the most and I\nthink code reading is the best way of not getting\ntrapped like that.",
                        "page": "17",
                        "id": 31